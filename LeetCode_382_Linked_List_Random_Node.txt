/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */

// 蓄水池采样  只选取1个数据的特例
// https://blog.csdn.net/huagong_adu/article/details/7619665
// https://www.jianshu.com/p/7a9ea6ece2af
// 	leetcode 398 随机数索引
class Solution {
public:
    /** @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node. */
    Solution(ListNode* head) {
        this->head = head;
    }
    
    /** Returns a random node's value. */
    int getRandom() {
        int val = 0;
        int cnt = 0;
        for (ListNode* node = head; node != nullptr; node = node->next) {
            ++cnt;
            if (rand() % cnt == 0) { // 取值范围[0, cnt-1],  所以1/cnt的概率出现0 表示选中该节点的值
                val = node->val;
            }
        }
        return val;
    }

private:
    // 保存链表的头节点
    ListNode* head;
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution* obj = new Solution(head);
 * int param_1 = obj->getRandom();
 */