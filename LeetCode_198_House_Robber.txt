class Solution {
public:
    int rob(vector<int>& nums) {
        if (nums.empty()) {
            return 0;
        } else if (nums.size() == 1) {
            return nums[0];
        } else { // 开始dp
            // dp[i] 表示偷到第i家 获得的最大金额
            // 到第i家 存在两种情况： 偷到i-2家的最大金额+第i家的金额(偷第i家)
            //                        偷到i-1家的最大金额(不偷第i家)
            vector<int> dp(nums.size(), 0);
            dp[0] = nums[0];
            dp[1] = max(nums[0], nums[1]);
            for (int i = 2; i < nums.size(); ++i) {
                dp[i] = max(dp[i-2]+nums[i], dp[i-1]);
            }
            return dp.back();
        }
    }
};