/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
// leetcode1110. 删点成林
// 后序遍历
class Solution {
public:
    TreeNode* removeLeafNodes(TreeNode* root, int target) {
        if (root == nullptr) {
            return nullptr;
        }
        // 先处理左右子树
        root->left  = removeLeafNodes(root->left, target);
        root->right = removeLeafNodes(root->right, target);
        // 当前节点已经是叶节点 且相等
        if (root->val == target && root->left == nullptr && root->right == nullptr) {
            // delete root; // 释放节点内存(leetcode上好像不能这么做)
            return nullptr;
        }
        return root;
    }
};