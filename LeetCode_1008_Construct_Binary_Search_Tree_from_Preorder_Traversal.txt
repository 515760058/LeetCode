/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
// 重建BST
class Solution {
public:
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        TreeNode* root = nullptr;
        for (int val : preorder) {
            root = addNode(root, val);
        }
        return root;
    }

private:
    // 向BST中插入一个节点val
    TreeNode* addNode(TreeNode* root, int val) {
        if (root == nullptr) {
            return new TreeNode(val);
        }
        // 在左子树或右子树中插入节点
        if (root->val > val) {
            root->left = addNode(root->left, val);
        } else {
            root->right = addNode(root->right, val);
        }
        return root;
    }
};