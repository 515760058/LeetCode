/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
// leetcode988. 从叶结点开始的最小字符串
class Solution {
public:
    int goodNodes(TreeNode* root) {
        if (root == nullptr) {
            return 0;
        }
        
        int cnt = 0;
        goodNodesHelper(root, root->val, cnt);
        return cnt;
    }

private:
    // 更新根到叶节点路径的最大值 并向下传递 
    void goodNodesHelper(TreeNode* root, int big, int& cnt) {
        if (root == nullptr) {
            return;
        }
        // 计数 并更新当前路径的最大值
        if (root->val >= big) {
            cnt++;
            big = root->val;
        }
        // 向子树递归
        goodNodesHelper(root->left, big, cnt);
        goodNodesHelper(root->right, big, cnt);
    }
};