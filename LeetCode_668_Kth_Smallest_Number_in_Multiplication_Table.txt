// 类似leetcode378. 有序矩阵中第K小的元素
class Solution {
public:
    int findKthNumber(int m, int n, int k) {
        int left = 1;
        int right = m * n;
        int res = 0;
        while (left <= right) {
            int mid = (left + right) >> 1;
            if(count(m, n, mid) >= k) {
                res = mid;
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return res;
    }
private:
    // <=mid的数字的数量
    int count(int m, int n, int mid) {
        // 从左下角开始判断 类似于leetcode378
        int i = 0;
        int j = n - 1;
        int count = 0; // 小于等于mid的数量
        while (i < m && j >= 0) {
            if ((i+1)*(j+1) <= mid) {
                count += j + 1;
                i++;
            } else {
                j--;
            }
        }
        return count;
    }
};