/* 参考题解：
因为以1为根节点层次编号的满二叉树可以对应到位的表示，所以用位运算的思路即可。
因为每层的顺序在变，所以每次需要对首位外的其它位取反。
举例14=1110b，
先将14右移，变为111b，然后对除第一位外所有位取反变为100b，即它的根节点4，
同理100b，右移变为10b，对除第一位外所有位取反变为11b，即它的根节点3
一直到1结束。
*/

class Solution {
public:
    vector<int> pathInZigZagTree(int label) {
        vector<int> res {1};
        while (label != 1) {
            res.push_back(label);
            label = label >> 1; // 右移1位
            label = label ^ (1 << (bitLen(label) - 1)) - 1;
        }
        reverse(res.begin() + 1, res.end());
        return res;
    }

private:
    // 计算label的比特位长度
    int bitLen(int label) {
        int len = 0;
        while (label) {
            label >>= 1;
            len++;
        }
        return len;
    }
};