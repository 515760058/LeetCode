// DFS
class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        dfs(image, sr, sc, image[sr][sc], newColor);
        return image;
    }

private:
    void dfs(vector<vector<int>>& image, int i, int j, int oldColor, int newColor) {
        if (i < 0 || i >= image.size() || j < 0 || j >= image[0].size()) {
            return;
        }
        // 不在老颜色区域内 || 已经是新颜色
        if (image[i][j] != oldColor || image[i][j] == newColor) {
            return;
        }
        image[i][j] = newColor;
        dfs(image, i+1, j, oldColor, newColor);
        dfs(image, i-1, j, oldColor, newColor);
        dfs(image, i, j-1, oldColor, newColor);
        dfs(image, i, j+1, oldColor, newColor);
    }
};