//滑动窗口
class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        if(s.size() == 0){
            return 0;
        }
        unordered_set<char> window;
        int res = 0;
        int left = 0;
        for(int i = 0; i < s.size(); i++){
            while (window.find(s[i]) != window.end()){//窗口中存在s[i] ：从左侧开始删，直到删掉了重复字母
                window.erase(s[left]);
                ++left;
            }
            //插入当前字符s[i]
            window.insert(s[i]);
            res = max(res, i-left+1);
        }
        return res;  
    }
};