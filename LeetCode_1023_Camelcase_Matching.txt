class Solution {
public:
    vector<bool> camelMatch(vector<string>& queries, string pattern) {
        vector<bool> res;
        for(string& query : queries) {
            res.push_back(match(query, pattern));
        }
        return res;
    }

private:
    // 对每个字符串，判断其true/false
    bool match(const string& query, const string& pattern) {
        int idx = 0; // pattern中使用的下标
        for(int i = 0; i < query.size(); ++i) {
            // 碰到大写字母
            if('A' <= query[i] && query[i] <= 'Z') {
                if(idx == pattern.size()  // query字符串还有大写字母，但是pattern模式串已经结束了
                   || query[i] != pattern[idx]) // query字符串中的大写字母 和 pattern中的字母(顺序)对应不上
                {
                    return false;
                }
            }
            // 
            if(query[i] == pattern[idx]) {
                ++idx;
            }
        }
        // query字符串都匹配上了，最后校验pattern有没有多余的
        return idx == pattern.size();
    }
};