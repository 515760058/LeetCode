/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        if (root == nullptr) {
            return nullptr;
        }
        // 找到p或q
        if (root == p || root == q) {
            return root;
        }
        // 
        TreeNode* l = lowestCommonAncestor(root->left, p, q);
        TreeNode* r = lowestCommonAncestor(root->right, p, q);
        if (l != nullptr && r != nullptr) { // p和q 一个在左子树一个在右子树
            return root;
        }
        if (l != nullptr) { // pq都在左子树 (隐含r is nullptr)
            return l;
        }
        if (r != nullptr) { // pq都在右子树 (隐含l is nullptr)
            return r;
        }
        return nullptr;
    }
};