//  进阶：leetcode 1590. 使数组和能被P整除
// 前缀和
// 前缀和适合于解决 连续，求和 相关的问题。遇到的问题如果包含相关要求，可以考虑尝试一下前缀和的解法。诸如子数组的哈，连续几个数字的和，等等
class Solution {
public:
    int subarraysDivByK(vector<int>& A, int K) {
        int cnt = 0;
        // 统计前缀和
        vector<int> prefixSum(K, 0);  //key:当前的前缀和对K的余数  value:余数的出现次数
        ++prefixSum[0];

        int sum = 0;
        for(int i = 0; i < A.size(); ++i){
            sum += A[i];
            //前缀和对k的余数(非负数)
            int temp = sum % K;
            if(temp < 0){
                temp += K;
            }

            if(prefixSum[temp]){// 前面某位置出现该余数，说明[某位置，当前位置]该区间的和是k的倍数
                cnt += prefixSum[temp];//加上出现的次数
            }
            ++prefixSum[temp];//更新余数出现的次数
        }
        return cnt;
    }
};
