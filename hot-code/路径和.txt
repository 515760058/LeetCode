
124. 二叉树中的最大路径和
路径 被定义为一条从树中任意节点出发，沿父节点-子节点连接，达到任意节点的序列。同一个节点在一条路径序列中 至多出现一次 。该路径 至少包含一个 节点，且不一定经过根节点。
路径和 是路径中各节点值的总和。
给你一个二叉树的根节点 root ，返回其 最大路径和 。
class Solution {
public:
    int maxPathSum(TreeNode* root) {
        if (root == nullptr) {
            return 0;
        }
        int res = INT_MIN;
        maxPathSumCore(root, res);
        return res;
    }

private:
    int maxPathSumCore(TreeNode* root, int& res) {
        if (root == nullptr) {
            return 0;
        }
        int leftSum = maxPathSumCore(root->left, res);
        leftSum = max(leftSum, 0); // 如果子树的作用是负的 则忽略不计 当做0
        int rightSum = maxPathSumCore(root->right, res);
        rightSum = max(rightSum, 0);
        // 当前节点的路径和  更新最大值
        int curr = leftSum + rightSum + root->val;
        res = max(res, curr);
        // 向上返回最大的一侧： (1)左子树路径+当前节点  (2)右子树路径+当前节点  (3)当前节点
        return max(leftSum, rightSum) + root->val;
    }
};


