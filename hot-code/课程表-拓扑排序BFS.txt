207. 课程表
class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> indegree(numCourses, 0);//每个顶点的入度
        vector<vector<int>> vec(numCourses);//顶点及其后继
        //统计顶点的入度 和 它的后继
        for(vector<int>& pre : prerequisites){
            ++indegree[pre[0]];
            vec[pre[1]].push_back(pre[0]);
        }
        //起始状态 将入度为0的顶点放入队列中
        queue<int> que;
        for(int i = 0; i < numCourses; ++i){
            if(indegree[i] == 0) {
                que.push(i);
            }
        }
        //一个可行的拓扑顺序
        vector<int> res;
        //依次取出入度为0的顶点，并删除该顶点在图中的边
        while(!que.empty()){
            //取出w (对w进行拓扑排序)
            int w = que.front();
            que.pop();
            res.push_back(w);
            //删除w的边: w所有的后继，入度都减一
            for(int u : vec[w]){
                --indegree[u];
                if(indegree[u] == 0){
                    que.push(u);
                }
            }
        }
        //若所有的顶点都拓扑排序了，则此图就不存在环。
        return res.size() == numCourses;
    }
};




210. 课程表 II
class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> indegree(numCourses, 0);//每个顶点的入度
        vector<vector<int>> vec(numCourses);//顶点及其后继
        //统计顶点的入度 和 它的后继
        for(vector<int>& pre : prerequisites){
            ++indegree[pre[0]];
            vec[pre[1]].push_back(pre[0]);
        }
        //起始状态 将入度为0的顶点放入队列中
        queue<int> que;
        for(int i = 0; i < numCourses; ++i){
            if(indegree[i] == 0) {
                que.push(i);
            }
        }
        //一个可能的拓扑顺序
        vector<int> res;
        //依次取出入度为0的顶点，并删除该顶点在图中的边
        while(!que.empty()){
            //取出w (对w进行拓扑排序)
            int w = que.front();
            que.pop();
            res.push_back(w);
            //删除w的边: w所有的后继，入度都减一
            for(int u : vec[w]){
                --indegree[u];
                if(indegree[u] == 0){
                    que.push(u);
                }
            }
        }
        //所有的顶点都拓扑排序了？此图是否存在环？
        if(res.size() < numCourses) {
            res.clear();
        }
        return res;;
    }
};
