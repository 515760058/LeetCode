#include <iostream>
#include <vector>

using namespace std;

// 快速排序  data[start, end]区间的数据
void quickSort(vector<int>& data, int start, int end) {
    if (start >= end) {
        return;
    }
    int privot = data[start]; // 锚点
    // 前后指针
    int i = start;
    int j = end;
    while (i < j) {
        // 从右向左找第一个小于privot的数 data[j]
        while(i < j && data[j] >= privot) {
            j--;
        }
        if(i < j) { // 把data[j]放在合适的位置
            data[i++] = data[j];
        }
        // 从左向右找第一个大于等于privot的数 data[i]
        while(i < j && data[i] < privot) {
            i++;
        }
        if(i < j) { // 把data[i]放在合适的位置
            data[j--] = data[i];
        }
    }
    // 摆放锚点
    data[i] = privot;
    // 递归调用
    quickSort(data, start, i-1);
    quickSort(data, i+1, end);
}

int main() {
    vector<int> data { 1, 3, 5, 7, 9, 2, 4, 6, 8, 10 };
    quickSort(data, 0, data.size()-1);
    for (int i : data) {
        cout << i << ", ";
    }
    return 0;
}

