/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* increasingBST(TreeNode* root) {
        if (root == nullptr) {
            return root;
        }
        vector<TreeNode*> res;
        inOrder(root, res);
        // 修改指针的left和right
        for (int i = 0; i < res.size() - 1; ++i) {
            (res[i])->left = nullptr;
            (res[i])->right = res[i+1];
        }
        // res.back()->left = nullptr;
        // res.back()->right = nullptr;
        return res.front();
    }
private:
    // 中序遍历 保存节点的指针
    void inOrder(TreeNode* node, vector<TreeNode*>& res) {
        if (node == nullptr) {
            return;
        }
        inOrder(node->left, res);
        res.push_back(node);
        inOrder(node->right, res);
    }
};