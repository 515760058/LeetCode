/*
 正面递推：
  三个人时,首先写出3!种排列  但是132和312这两种不行(由于第一个人没有坐2号座位，所以2号乘客肯定坐在2号座位)
  剩下的四种可能情况： 123  213  231  321  三号乘号坐在三号座位的情况是2/4=0.5

 换一种思路：
    后面每一个人来了之后如果自己的座位上有人就把他赶走
    所以2~n-1号就会对位入座。
    第一个人就在1号座位(自己的座位)和n号座位之间以50%的概率坐下

先随便写个能运行的比如“return n”，然后随便丢几个数据你会发现，除了n =1，其他结果都是0.5
*/
class Solution {
public:
    double nthPersonGetsNthSeat(int n) {
        return n == 1 ? 1.0 : 0.5;
    }
};