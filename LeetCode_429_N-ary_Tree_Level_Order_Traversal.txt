/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>> level;
        levelOrderHelper(root, 0, level);
        return level;
    }

private:
    void levelOrderHelper(Node* root, int depth, vector<vector<int>>& level) {
        if (root == nullptr) {
            return;
        }
        if (depth >= level.size()) {
            level.push_back( {} );
        }
        level[depth].push_back(root->val);
        for (Node* node : root->children) {
            levelOrderHelper(node, depth+1, level);
        }
    }
};