// 在所有气球右边界的最小位置处 射一支箭
// 重复上述过程
class Solution {
public:
    int findMinArrowShots(vector<vector<int>>& points) {
        if (points.empty()) {
            return 0;
        }

        // 排序 按右边界值从小到大
        sort(points.begin(), points.end(),
             [](const vector<int>& lhs, const vector<int> rhs) { // lambda
                 return lhs[1] < rhs[1];
             });

        int cnt = 0;
        for (int i = 0; i < points.size(); /*not need*/) {
            int arrowIdx = points[i][1]; // 发射箭的坐标
            cnt++;
            // 这支箭能引爆的气球
            while (i < points.size() &&
                   points[i][0] <= arrowIdx && arrowIdx <= points[i][1]) // 引爆了这个气球
            {
                i++;
            }
        }
        return cnt;
    }
};
