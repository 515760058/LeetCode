class Solution {
public:
    vector<vector<int>> intervalIntersection(vector<vector<int>>& A, vector<vector<int>>& B) {
        vector<vector<int>> res;
        // A和B中各取一个区间
        int i= 0;
        int j = 0;
        while (i < A.size() && j < B.size()) {
            int start = max(A[i][0], B[j][0]); // 两个区间左端点的大值作为起点
            int end = min(A[i][1], B[j][1]); // 两个区间右端点的小值作为终点
            // 满足相交的条件
            if (start <= end) {
                res.push_back( {start, end} );
            }
            // A或者B 更新下一个区间
            if (A[i][1] < B[j][1]) {
                i++;
            } else {
                j++;
            }
        }
        return res;
    }
};