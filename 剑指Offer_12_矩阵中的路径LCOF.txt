// 回溯  leetcode79单词搜索
class Solution {
public:
    bool exist(vector<vector<char>>& board, string word) {
        if (word.empty()) {
            return true;
        }

        for (int i = 0; i < board.size(); ++i) {
            for (int j = 0; j < board[0].size(); ++j) {
                if (board[i][j] == word[0]) {
                    vector<vector<bool>> visited(board.size(), vector<bool>(board[0].size(), false));
                    bool found = false;
                    backTrace(board, i, j, visited, word, 0, found);
                    if (found) {
                        return true;
                    }
                }
            }
        }
        return false;
    }

private:
    void backTrace(vector<vector<char>>& board, int i, int j, vector<vector<bool>>& visited, string& word, int idx, bool& found) {
        // 找到了
        if (idx == word.size() || found) {
            found = true;
            return;
        }
        // 下标不合法
        if (i < 0 || i >= board.size() || j < 0 || j >= board[0].size()) {
            return;
        }
        // 已使用了当前字符 || 当前字符不匹配
        if (visited[i][j] || board[i][j] != word[idx]) {
            return;
        }
        // 回溯下一个
        visited[i][j] = true;
        backTrace(board, i-1, j, visited, word, idx+1, found);
        backTrace(board, i+1, j, visited, word, idx+1, found);
        backTrace(board, i, j-1, visited, word, idx+1, found);
        backTrace(board, i, j+1, visited, word, idx+1, found);
        visited[i][j] = false;
    }
};