/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isCousins(TreeNode* root, int x, int y) {
        map<int, int> d; // 深度
        map<int, int> f; // 父节点
        preOrder(root, 0, 0, d, f);
        return d[x] == d[y] && f[x] != f[y];
    }

private:
    void preOrder(TreeNode* root, int depth, int father, map<int, int>& d, map<int, int>& f) {
        if (root == nullptr) {
            return;
        }
        d[root->val] = depth;
        f[root->val] = father;
        preOrder(root->left, depth+1, root->val, d, f);
        preOrder(root->right, depth+1, root->val, d, f);
    }
};