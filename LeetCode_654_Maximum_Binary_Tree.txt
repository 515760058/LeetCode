/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        return constructTreeHelper(nums, 0, nums.size()-1);
    }

private:
    TreeNode* constructTreeHelper(vector<int>& nums, int start, int end) {
        if (start > end) {
            return nullptr;
        }
        // 当前节点
        int idx = max_element(nums.begin()+start, nums.begin()+end+1) - nums.begin();
        TreeNode* node = new TreeNode(nums[idx]);
        // 左右子树
        node->left = constructTreeHelper(nums, start, idx-1);
        node->right = constructTreeHelper(nums, idx+1, end);
        return node;
    }
};